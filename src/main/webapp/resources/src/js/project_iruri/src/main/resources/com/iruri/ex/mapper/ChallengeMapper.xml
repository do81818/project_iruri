<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iruri.ex.mapper.ChallengeMapper">

	<resultMap type="com.iruri.ex.vo.IClassVO" id="iClassMap">
		<result property="classId" column="CLASS_ID"/>
		<result property="classTitle" column="CLASS_TITLE"/>
		<result property="classContent" column="CLASS_CONTENT"/>
		<result property="classGoal" column="CLASS_GOAL"/>
		<result property="classExerciseCount" column="CLASS_EXERCISECOUNT"/>
		<result property="classStartDate" column="CLASS_STARTDATE"/>
		<result property="classEndDate" column="CLASS_ENDDATE"/>
		<result property="classImage" column="CLASS_IMAGE"/>
		<result property="classLike" column="CLASS_LIKE"/>
		<result property="classState" column="CLASS_STATE"/>
		<result property="classHit" column="CLASS_HIT"/>
		<result property="classJoinMember" column="CLASS_JOINMEMBER"/>
		<result property="classTrainerInfo" column="CLASS_TRAINERINFO"/>
		<result property="classTotalMember" column="CLASS_TOTALMEMBER"/>
		<result property="classPrice" column="CLASS_PRICE"/>
		<result property="classNeed" column="CLASS_NEED"/>
		<result property="categoryId" column="CATEGORY_ID"/>
		<result property="classLevel" column="CLASS_LEVEL"/>
		<result property="classTime" column="CLASS_TIME"/>
		<result property="rnum" column="rnum"/>		
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />
		<collection property="exerciseDateList" resultMap="exerciseDateMap">
		</collection>
		<collection property="exerciseKindList" resultMap="exerciseKindMap">
		</collection>
		<collection property="likeListList" resultMap="likeListMap">
		</collection>
		<collection property="buyList" resultMap="buyMap">
		</collection>
		<collection property="boardList" resultMap="boardMap">
		</collection>
	</resultMap>


	<resultMap type="com.iruri.ex.vo.ExerciseDateVO" id="exerciseDateMap">
		<result property="exerciseDate" column="EXERCISE_DATE"/>
		<result property="classId" column="CLASS_ID"/>
	</resultMap>
	
	<resultMap type="com.iruri.ex.vo.ExerciseKindVO" id="exerciseKindMap">
		<result property="exerciseKind" column="EXERCISE_KIND"/>
		<result property="classId" column="CLASS_ID"/>
	</resultMap>
	
	<resultMap type="com.iruri.ex.vo.LikeListVO" id="likeListMap">
		<result property="likeListId" column="LIKELIST_ID"/>
		<result property="classId" column="CLASS_ID"/>
		<result property="boardId" column="BOARD_ID"/>
		<result property="rnum" column="rnum"/>	
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />
	</resultMap>
	
	<resultMap type="com.iruri.ex.vo.BuyVO" id="buyMap">
		<result property="buyId" column="BuyId"/>
		<result property="buyRealPay" column="Buyrealpay"/>
		<result property="buyPoint" column="BuyPoint"/>
		<result property="buyDate" column="BuyDate"/>
		<result property="payId" column="PayId"/>
		<result property="classId" column="ClassId"/>
		<result property="rnum" column="rnum"/>
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />	
	</resultMap>
	
	
		<resultMap type="com.iruri.ex.vo.BoardVO" id="boardMap">
			<result property="boardId" column="BOARD_ID"/>
			<result property="boardTitle" column="BOARD_TITLE"/>
			<result property="boardContent" column="BOARD_CONTENT"/>
			<result property="boardFile" column="BOARD_FILE"/>
			<result property="boardDate" column="BOARD_DATE"/>
			<result property="boardState" column="BOARD_STATE"/>
			<result property="boardHit" column="BOARD_HIT"/>
			<result property="boardLike" column="BOARD_LIKE"/>
			<result property="boardGroupId" column="BOARD_GROUPID"/>
			<result property="categoryId" column="CATEGORY_ID"/>
			<result property="rnum" column="rnum"/>	
			<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />	
	</resultMap>


    
	<!-- 챌린지 메인 리스트 뽑기 -->
	<select id="ChallengeSelectAll" resultMap="iClassMap">
		<![CDATA[
		SELECT
			*
		FROM 
			iclass
		WHERE
			CATEGORY_ID = 1
		]]>
	</select>
	
	
	
	
	<!-- 챌린지 개설 시 폼 값 입력 -->
	<insert id="insertChallenge">
	<![CDATA[
		INSERT INTO iclass
		(
			CLASS_ID, 
			CLASS_TITLE, 
			CLASS_CONTENT, 
			CLASS_GOAL, 
			CLASS_EXERCISECOUNT, 
			CLASS_STARTDATE, 
		    CLASS_ENDDATE, 
		    CLASS_IMAGE,  
		    CLASS_TOTALMEMBER,
		    CLASS_NEED,
		    CATEGORY_ID, 
		    USER_ID, 
		    CLASS_LEVEL
		) 
		    VALUES 
		(
			(SELECT NVL(MAX(class_id), MAX(class_id)) + 1 FROM iclass),
			#{classTitle}, 
			#{classContent}, 
			#{classGoal}, 
			#{classExerciseCount}, 
			#{classStartDate}, 
		    #{classEndDate},
		    #{classImage}, 
		    #{classTotalMember},
		    ' ',
		    1, 
		    #{iUserVO.userId}, 
		    #{classLevel}
		)
          
	]]>
	</insert>
	

	
	<!--전체 챌린지 -->
	<select id="getTotalCount_challenge" resultType="int">
	<![CDATA[
		select count(*) from iclass where category_id = 1 and CLASS_ENDDATE >= sysdate
	]]>
	
	<if test="keyword != null">
			<![CDATA[
                  and CLASS_TITLE like '%'||#{keyword}||'%'
            ]]>
        </if>
        
	</select>


	<select id="getListWithPaging_challenge" resultMap="iClassMap">
	<![CDATA[
	SELECT * FROM (
    SELECT ROWNUM AS RNUM, A.* FROM (
        SELECT * FROM iclass where category_id = 1 and class_id > 0 and CLASS_ENDDATE >= sysdate order by CLASS_STARTDATE 
             ) A WHERE ROWNUM <= #{pageNum} * #{amount}
              ]]>
    	<if test="keyword != null">
    	
    			and CLASS_TITLE like '%'||#{keyword}||'%'
    		
    	</if>
    <![CDATA[
           ) WHERE RNUM > (#{pageNum}-1) * #{amount}
	]]>
      
	</select>
	
	
	   <!--지난 챌린지 -->
   <select id="getTotalCount_challengeEndList"  resultType="int">
	<![CDATA[
		select count(*) from iclass where category_id = 1 and CLASS_ENDDATE < sysdate
	]]>
	
		<if test="keyword != null">
			<![CDATA[
                  and CLASS_TITLE like '%'||#{keyword}||'%'
            ]]>
        </if>
        
	</select>


	<select id="getListWithPaging_challengeEndList" resultMap="iClassMap">
	<![CDATA[
	SELECT * FROM (
    SELECT ROWNUM AS RNUM, A.* FROM (
        SELECT * FROM iclass where category_id = 1 and class_id > 0 and CLASS_ENDDATE < sysdate order by class_enddate desc
             ) A WHERE ROWNUM <= #{pageNum} * #{amount}
     ]]>
    	<if test="keyword != null">
    	
    			and CLASS_TITLE like '%'||#{keyword}||'%'
    		
    	</if>
    <![CDATA[
           ) WHERE RNUM > (#{pageNum}-1) * #{amount}
	]]>
	</select>

	
	<!--관심 챌린지 -->
   	<select id="getTotalCount_challengeLikeList" resultType="int">
	<![CDATA[
		select count(*) from likelist l, iclass i where l.CLASS_ID = i.CLASS_ID and i.USER_ID = #{userId}  
	]]>
	<if test="keyword != null">
			<![CDATA[
				and i.CLASS_TITLE like '%'||#{keyword}||'%'
            ]]>
        </if>
        
	</select>


	<select id="getListWithPaging_challengeLikeList" parameterType="HashMap" resultMap="iClassMap">
	 <![CDATA[
	
		SELECT *
		FROM
		(
		    SELECT ROWNUM rn, c.*
		    FROM
		    (
		        SELECT B.*, A.likelist_id, A.board_id
		        FROM iclass B,
		        (
					SELECT *
		            FROM likelist
		            WHERE user_id = #{userId}
		        ) A
		        WHERE A.class_id = B.class_id and A.user_id = #{userId} and B.category_id = 1 and CLASS_ENDDATE >= sysdate
		        ORDER BY B.class_startdate DESC
		    ) C
		    WHERE rownum <= #{pageNum} * #{amount} 
		     ]]>
		    	<if test="keyword != null">
		    		<![CDATA[
		    			and C.CLASS_TITLE like '%'||#{keyword}||'%'
		    		]]>
		    	</if>
		    <![CDATA[
		    	)	WHERE rn > (#{pageNum}-1) * #{amount}
	]]>

	</select>
	
	
	
	<!-- 챌린지 상세정보 불러오기 -->
	<select id="readChallengeInfo" resultMap="iClassMap">
		<![CDATA[
		SELECT A.*, B.user_nickname 
		FROM ICLASS A, iuser B 
		WHERE A.CATEGORY_ID = 1 and A.class_id > 0  and A.CLASS_ID = #{classId}
        and A.user_id = B.user_id
	]]>
	</select>
	
	
	<!-- 챌린지 댓글 불러오기 -->
		<select id="getTotalCount_challengeReply" resultType="int">
		<![CDATA[
			  	select count(*) 
			  	from board b, iclass i
	       	 	where b.category_id=6 and b.board_groupid=i.class_id and i.class_id=#{classId}
		]]>
		</select>
		
		<select id="getListWithPaging_challengeReply" resultMap="iClassMap">
			<![CDATA[
			
				SELECT *
				FROM
				(
				    SELECT ROWNUM rn, c.*
				    FROM
				    (
				        SELECT B.*, u.user_nickname 
				        FROM board B, iclass A, iuser u
         				where B.category_id=6 and B.board_groupid=A.class_id and A.class_id=#{classId} and u.user_id=B.user_id
				    ) C
				    WHERE rownum <= #{pageNum} * #{amount} 
				    	)	WHERE rn > (#{pageNum}-1) * #{amount}
			]]>
      
			</select>
			
				
			
	
	
	<!-- 챌린지 참여인원 update -->
   	<update id="upJoinMember">
	<![CDATA[
		update ICLASS set CLASS_JOINMEMBER = CLASS_JOINMEMBER+1 where CATEGORY_ID = 1 and class_id > 0 and class_joinmember <= class_totalmember and CLASS_ID = #{classId}
	]]>
	</update>
	
	
		<!-- 챌린지 참여, 취소(유저 참여챌린지) -->
		<!-- 챌린지 참여 시 -->
		<insert id="insertUserJoinChallenge">
				<![CDATA[
				INSERT ALL INTO 
				
				buy (buy_id,buy_realpay, buy_point, buy_date, user_id, pay_id, class_id)
				
				VALUES 
				((SELECT NVL(MAX(buy_id), MAX(buy_id)) + 1 FROM
				buy),0,0,sysdate,#{iUserVO.userId},(SELECT NVL(MAX(pay_id), MAX(pay_id)) + 1 FROM
				pay), #{classId})
			
			    INTO 
			    pay(pay_id, pay_state, pay_way, buy_id)
				VALUES ((SELECT NVL(MAX(pay_id), MAX(pay_id)) + 1 FROM
				pay),'pay','챌린지',(SELECT NVL(MAX(buy_id), MAX(buy_id)) + 1 FROM buy))
			
				SELECT * FROM DUAL
				]]>
		</insert>
	
	   	<!-- 유저가 챌린지에 참여한 기록이 있는지 -->
	   	<select id="userReadChallenge" resultType="int">
	   		<![CDATA[
	   			SELECT count(*) 
	   			FROM BUY
	   			WHERE user_id = #{iUserVO.userId} and class_id = #{classId}
	   		]]>
	   	</select>
	   	

		<!-- 관심수 -->
		<!-- 유저가 그 클래스id에 좋아요 한 기록이 있는지 (likelist에 있는지) -->
		<select id="userLikeListCheck" resultType="int">
	   		<![CDATA[
	   			SELECT count(likelist_id) 
	   			FROM likelist
	   			WHERE user_id = #{userId} and class_id = #{classId}
	   		]]>
	   	</select>
	   	
	   	<!-- likelist 삭제하기 -->
		<delete id = "challengeLikeDelete">
			<![CDATA[
				DELETE FROM likelist
				WHERE user_id=#{userId} and class_id=#{classId}
			]]>
		</delete>
		
		<!-- 좋아요 수 줄이기 -->
		<update id="likeCountDown">
			<![CDATA[
				UPDATE iclass SET
				class_like = class_like-1 
				WHERE 
				class_id=#{class_id}
			]]>
		</update>
	   	
		<!-- likelist 추가 -->
		<insert id="challengeLikeInsert">
			<![CDATA[
				INSERT INTO 
				likelist (likelist_id, user_id, class_id)
				VALUES (
				(SELECT NVL(MAX(likelist_id), MAX(likelist_id)) + 1 FROM likelist), #{userId}, #{classId})
			]]>
		</insert>

		<!-- 좋아요 수 늘리기 -->
		<update id="likeCountUp">
			<![CDATA[
				UPDATE iclass SET
				class_like = class_like+1 
				WHERE 
				class_id=#{class_id}
			]]>
		</update>
		
		
</mapper>