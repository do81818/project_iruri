<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iruri.ex.mapper.MypageTrainerMapper">
<!-- iclass  -->
	<resultMap type="com.iruri.ex.vo.IClassVO" id="iClassMap">
		<result property="classId" column="CLASS_ID"/>
		<result property="classTitle" column="CLASS_TITLE"/>
		<result property="classContent" column="CLASS_CONTENT"/>
		<result property="classGoal" column="CLASS_GOAL"/>
		<result property="classExerciseCount" column="CLASS_EXERCISECOUNT"/>
		<result property="classStartDate" column="CLASS_STARTDATE"/>
		<result property="classEndDate" column="CLASS_ENDDATE"/>
		<result property="classImage" column="CLASS_IMAGE"/>
		<result property="classLike" column="CLASS_LIKE"/>
		<result property="classState" column="CLASS_STATE"/>
		<result property="classHit" column="CLASS_HIT"/>
		<result property="classJoinMember" column="CLASS_JOINMEMBER"/>
		<result property="classTrainerInfo" column="CLASS_TRAINERINFO"/>
		<result property="classTotalMember" column="CLASS_TOTALMEMBER"/>
		<result property="classPrice" column="CLASS_PRICE"/>
		<result property="classNeed" column="CLASS_NEED"/>
		<result property="categoryId" column="CATEGORY_ID"/>
		<result property="classLevel" column="CLASS_LEVEL"/>
		<result property="rnum" column="rnum"/>
		<result property="classTime" column="CLASS_TIME"/>
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />
	</resultMap>
	
<!-- money -->
	<resultMap type="com.iruri.ex.vo.MoneyVO" id="moneyMap">
		<result property="moneyId" column="MONEY_ID"/>
		<result property="moneyDate" column="MONEY_DATE"/>
		<result property="moneyInput" column="MONEY_INPUT"/>
		<result property="moneyOutput" column="MONEY_OUTPUT"/>
		<result property="payId" column="PAY_ID"/>
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />
	</resultMap>
	
<!-- pay -->
    <resultMap type="com.iruri.ex.vo.PayVO" id="payMap">
		<result property="payId" column="PAY_ID"/>
		<result property="payState" column="PAY_STATE"/>
		<result property="payWay" column="PAY_WAY"/>
		<result property="buyId" column="BUY_ID"/>
	</resultMap>
	
<!-- buy -->
	<resultMap type="com.iruri.ex.vo.BuyVO" id="buyMap">
		<result property="buyId" column="BUY_ID"/>
		<result property="buyRealpay" column="BUY_REALPAY"/>
		<result property="buyPoint" column="BUY_POINT"/>
		<result property="buyDate" column="BUY_DATE"/>
		<result property="payId" column="PAY_ID"/>
		<result property="classId" column="CLASS_ID"/>
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />
		
		<collection property="iClassList" resultMap="iClassMap">
		</collection>
		
		<collection property="moneyList" resultMap="moneyMap">
		</collection>
		
		<collection property="payList" resultMap="payMap">
		</collection>
	
	</resultMap>
	
	<!-- ProfitVO -->
	<resultMap type="com.iruri.ex.vo.ProfitVO" id="ProfitMap">
		<result property="buyRealpay" column="BUY_REALPAY"/>
		<result property="buyPoint" column="BUY_POINT"/>
		<result property="buyDate" column="BUY_DATE"/>
		<result property="classId" column="CLASS_ID"/>
		<result property="classTitle" column="CLASS_TITLE"/>
		<result property="rnum" column="rnum"/>
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />
	</resultMap>

	
	<!-- trainerUserManagementVO -->
	<resultMap type="com.iruri.ex.vo.trainerUserManagementVO" id="trainerUserManagementMap">
		<result property="classId" column="CLASS_ID"/>
		<result property="classTitle" column="CLASS_TITLE"/>
		<result property="classEndDate" column="CLASS_ENDDATE"/>
		<result property="classState" column="CLASS_STATE"/>
		<result property="classJoinMember" column="CLASS_JOINMEMBER"/>
		<result property="rnum" column="rnum"/>
		
		<collection property="iUserList" resultMap="iUserMap">
		</collection>	
	</resultMap>
	
	<!-- IUserVO -->
	<resultMap type="com.iruri.ex.vo.IUserVO" id="iUserMap">
		<result property="userId" column="user_id"/>
		<result property="userEmail" column="user_email"/>
		<result property="userPw" column="user_pw"/>
		<result property="userNickname" column="user_nickname"/>
		<result property="userName" column="user_name"/>
		<result property="userPhone" column="user_phone"/>
		<result property="userSigndate" column="user_signdate"/>
		<result property="userPoint" column="user_point"/>
		<result property="userBlackList" column="user_blacklist"/>
		<result property="userBlaskListReason" column="user_blacklist_reason"/>
	</resultMap>

	
	<!-- 유저정보, 클래스 정보 VO -->
	<resultMap type="com.iruri.ex.vo.TableJoinVO" id="userClassJoinMap">
		<collection property="iuserVo" resultMap="iUserMap"></collection>
		<collection property="iclassVo" resultMap="iClassMap"></collection>
	</resultMap>
	
	
	<!-- ICommentVO -->
	<resultMap type="com.iruri.ex.vo.ICommentVO" id="iCommentMap">
		<result property="commentId" column="comment_id"/>
		<result property="commentDate" column="comment_date"/>
		<result property="commentContent" column="comment_content"/>
		<result property="classId" column="class_id"/>
	</resultMap>
	
	<!--BoardVO -->
	<resultMap type="com.iruri.ex.vo.BoardVO" id="boardMap">
		<result property="boardId" column="BOARD_ID"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="boardFile" column="BOARD_FILE"/>
		<result property="boardDate" column="BOARD_DATE"/>
		<result property="boardState" column="BOARD_STATE"/>
		<result property="boardHit" column="BOARD_HIT"/>
		<result property="boardLike" column="BOARD_LIKE"/>
		<result property="boardGroupId" column="BOARD_GROUPID"/>
		<result property="categoryId" column="CATEGORY_ID"/>
		<result property="rnum" column="rnum"/>	
		<association property="iUserVO" column="USER_ID" javaType="com.iruri.ex.vo.IUserVO" resultMap="com.iruri.ex.mapper.IUserMapper.iUserMap" />
		<collection property="iClassList" resultMap="iClassMap">
		</collection>
	</resultMap>
	
	<!-- 클래스댓글조회(페이징)  -->
	<select id="countReply" resultType="Integer">
	<![CDATA[
		select count(*) from board b,  iclass c,  iuser u
where board_groupid in (SELECT class_id from iclass where user_id =#{userId})
and b.board_groupid = c.class_id and b.category_id=6 and b.user_id = u.user_id
	]]>
	</select>
	
		<!-- 클래스댓글조회 + 페이징 -->
	<select id="classReplyList" parameterType="HashMap" resultMap="boardMap">
		<![CDATA[
				SELECT *
FROM
(
    SELECT ROWNUM rn, ac.*
    FROM
    (
       select b.*, c.class_title, c.class_state, u.user_nickname from board b,  iclass c,  iuser u
where board_groupid in (SELECT class_id from iclass where user_id =#{userId})
and b.board_groupid = c.class_id and b.category_id=6 and b.user_id = u.user_id
    ) ac
     WHERE rownum <= #{cri.pageNum} * #{cri.amount}
)
WHERE rn > (#{cri.pageNum}-1) * #{cri.amount}
		]]>
	</select>
	
	<!-- 현재 진행중인 클래스(+페이징)  -->
	<select id="countMypageTrainerClass" resultType="int">
	<![CDATA[
		select count(*) from iClass where user_id = #{userId} and CLASS_ENDDATE >= sysdate
	]]>
	</select>

	<!-- 트레이너의 총수익 뽑기  -->
	<select id="trainerProfit" resultType="int">
		<![CDATA[
	SELECT (select sum(buy_realpay + buy_point)
from buy where class_id in (select class_id from iclass where user_id = #{userId}))
-
(select sum(money_output) from money where pay_id in 
(select pay_id from pay where buy_id in 
(select buy_id from buy where class_id in (select class_id from iclass where user_id = #{userId})))) FROM DUAL
		]]>
	</select>

	<!-- 트레이너의 월별 수익 뽑기  -->
	<select id="monthProfit" resultType="int">
		<![CDATA[
		select (select sum(buy_realpay + buy_point) 
from buy where class_id in (select class_id from iclass where user_id= #{userId}) 
and buy_date BETWEEN (SELECT TRUNC(SYSDATE, 'MM') FROM DUAL) 
and (SELECT LAST_DAY(SYSDATE) FROM DUAL)
-
(select sum(money_output) from money where pay_id in 
(select pay_id from pay where buy_id in 
(select buy_id from buy where class_id in (select class_id from iclass where user_id=#{userId}) 
and buy_date BETWEEN (SELECT TRUNC(SYSDATE, 'MM') FROM DUAL) 
and (SELECT LAST_DAY(SYSDATE) FROM DUAL)
)))) as thisMonthProfit from dual
		]]>
	</select>
	
	
	<!-- 트레이너 수익 페이징 -->
	<select id="getTotalCount_mypageTrainerProfit" resultType="int">
	<![CDATA[
		select count(*) from buy, iclass
where buy.class_id=iclass.class_id and iclass.user_id=#{userId}
order by buy.buy_date desc
	]]>
	</select>
	
	<!-- 트레이너의 월별 수익 뽑기 + 페이징 -->
	<select id="profitList" parameterType="HashMap" resultMap="ProfitMap">
		<![CDATA[
				SELECT *
FROM
(
    SELECT ROWNUM rn, c.*
    FROM
    (
        SELECT buy_date, class_title, buy_realpay, buy_point
        FROM buy, iclass
        where buy.class_id=iclass.class_id and iclass.user_id = #{userId}
        order by buy.buy_date desc
    ) C
     WHERE rownum <= #{cri.pageNum} * #{cri.amount}
)
WHERE rn > (#{cri.pageNum}-1) * #{cri.amount}
		]]>
	</select>
	
	
	<!-- 회원관리 페이징 -->
	<select id="getTotal_trainerUserManagement" resultType="int">
	<![CDATA[
		select count(*) from iClass where user_id = #{userId}
	]]>
	</select>
	
	<!-- 회원관리 + 페이징 -->
	<select id="trainerUserManagement" parameterType="HashMap" resultMap="trainerUserManagementMap">
		<![CDATA[
				SELECT *
FROM
(
    SELECT ROWNUM rn, bc.*
    FROM
    (
        SELECT B.*
        FROM iclass B
        WHERE B.user_id = #{userId} and B.category_id = 2 
        ORDER BY B.class_id DESC, B.class_startdate DESC
    ) bc
     WHERE rownum <= #{cri.pageNum} * #{cri.amount}
)
WHERE rn > (#{cri.pageNum}-1) * #{cri.amount}
		]]>
	</select>
	
	
	<!-- 회원관리 List2 -->
	<select id="trainerUserManagementList2" resultMap="trainerUserManagementMap">
		<![CDATA[
			select *
from iuser, 
(select buy.buy_id, buy.user_id, iclass.class_id, iclass.class_title, 
iclass.class_joinmember, iclass.class_enddate, iclass.class_state 
from buy,iclass,pay
where buy.class_id = iclass.class_id and iclass.user_id= #{userId} and pay.buy_id = buy.buy_id
and pay.pay_state='pay'
order by buy.user_id)c
where c.user_id = iuser.user_id 
order by c.class_id desc
		]]>
	</select>
	
	<!-- comment 리스트  -->
	<select id="commentList" resultMap="trainerUserManagementMap">
		<![CDATA[
			SELECT distinct *
FROM ICOMMENT,( 
select iuser.user_id
from iuser, 
(select buy.user_id, iclass.class_id
from buy,iclass,pay
where buy.class_id = iclass.class_id and iclass.user_id = #{userId} and pay.buy_id = buy.buy_id
and pay.pay_state='pay'
order by buy.user_id)c 
where c.user_id = iuser.user_id
order by class_id desc)CM
WHERE icomment.user_id = cm.user_id
order by icomment.comment_id
		]]>
	</select>
	
	
	<!-- 특정 트레이너가 개설한 클래스 리스트 -->
	<select id="pagingTrainerClassList" resultMap="iClassMap">
		<![CDATA[
		SELECT *
		FROM
		(
		    SELECT ROWNUM rn, bc.*
		    FROM
		    (
		        select class_id, class_title, class_state, class_joinmember
				from iclass
				where user_id = #{userId}
		    ) bc
		     WHERE rownum <= #{cri.pageNum} * #{cri.amount}
		)
		WHERE rn > (#{cri.pageNum}-1) * #{cri.amount}
		]]>
	</select>
	
	<!-- 특정 트레이너가 개설한 클래스 리스트 갯수 -->
	<select id="countPagingClassList" resultType="Integer">
	<![CDATA[
		select count(*) from 
		(
	        select class_id, class_title, class_state, class_joinmember
			from iclass
			where user_id = #{userId}
	    )
	]]>
	</select>
	
	<!-- 클래스에 등록한 유저 리스트 -->
	<select id="ClassBuyUserList" resultMap="userClassJoinMap">
		<![CDATA[
		select c.*, u.user_nickname, u.user_phone
		from 
			(select b.class_id, b.user_id
			from pay p, buy b
			where p.buy_id = b.buy_id and p.pay_state = 'pay') c
		inner join iuser u
		on c.user_id = u.user_id
		order by u.user_id desc
		]]>
	</select>
	
	
	<!-- 해당 클래스의 특정 유저에 대한 코멘트 리스트 -->
	<select id="ClassBuyUserCommentList" resultMap="iCommentMap">
		<![CDATA[
		select *
		from icomment
		where class_id = #{classId} and user_id = #{userId}
		order by comment_id desc	
		]]>
	</select>
	
	
	<insert id="insertComment">
	<![CDATA[
		INSERT INTO icomment (
    comment_id,
    comment_date,
    comment_content,
    user_id,
    class_id
) VALUES (
    (select max(comment_id) from icomment)+1,
    sysdate,
    #{commentContent},
    #{userId},
    #{classId}
)
	]]>
	</insert>
	
	


</mapper>